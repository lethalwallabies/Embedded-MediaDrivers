
PACKAGE_NAME=SYNO-Apollolake
PACKAGE_CODE=SYNOAPOLLOLAKE

KERNEL_LOCATION=linux-4.4.x.txz
KERNEL_MD5=

TOOLCHAIN_LOCATION=apollolake-gcc493_glibc220_linaro_x86_64-GPL.txz
TOOLCHAIN_MD5=

EXTRAS_LOCATION=

function SYNOAPOLLOLAKE_ENVIRONMENT {
	echo "custom environment"

	mkdir -p ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}

	if [ ! -d "x86_64-pc-linux-gnu" ] ; then
		tar xf ${TOP_MDB_DIR}/dl/${PACKAGE_NAME}/${TOOLCHAIN_LOCATION}
		chmod -R +w ${TOP_MDB_DIR}/build/${PACKAGE_CODE}/
	fi

	export PATH=${TOP_MDB_DIR}/build/${PACKAGE_CODE}/x86_64-pc-linux-gnu/bin:$PATH
	export CROSS_COMPILE=x86_64-pc-linux-gnu-
}

function SYNOAPOLLOLAKE_KERNEL_CONFIGURE {
	echo "custom kernel configure func"
	mkdir -p ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}

	if [ ! -d "${KERNEL_LOCATION/.txz/}" ] ; then
		tar xf ${TOP_MDB_DIR}/dl/${PACKAGE_NAME}/${KERNEL_LOCATION}
	fi

	for i in ${EXTRAS_LOCATION} ; do
		if [ ! -d "${i/txz}" ] ; then
			tar xf ${TOP_MDB_DIR}/dl/${PACKAGE_NAME}/${i}
		fi
	done

	cd "${KERNEL_LOCATION/.txz/}"
	if [ -d "${TOP_MDB_DIR}/board/${PACKAGE_NAME}/kernel_patches/" -a ! -f .flag_patched ] ; then
		for i in ${TOP_MDB_DIR}/board/${PACKAGE_NAME}/kernel_patches/*patch ; do
			patch -p1 < ${i}
		done
		touch .flag_patched
	fi

	cp synoconfigs/apollolake .config
	make olddefconfig
}

function SYNOAPOLLOLAKE_KERNEL_BUILD {
	echo "custom kernel build func";

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	if [ ! -d "${KERNEL_LOCATION/.txz/}" ] ; then
		SYNOAPOLLOLAKE_KERNEL_CONFIGURE
	fi

	cd "${TOP_MDB_DIR}/build/${PACKAGE_CODE}/${KERNEL_LOCATION/.txz/}"

	make modules CC=${CROSS_COMPILE}gcc
}

function SYNOAPOLLOLAKE_KERNEL_CLEAN {
	echo "custom kernel clean func";

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	if [ ! -d "${KERNEL_LOCATION/.txz/}" ] ; then
		SYNOAPOLLOLAKE_KERNEL_CONFIGURE
	fi

	cd "${TOP_MDB_DIR}/build/${PACKAGE_CODE}/${KERNEL_LOCATION/.txz/}"

	make clean
}

function SYNOAPOLLOLAKE_MEDIA_CONFIGURE {
	echo "custom media configure func";
	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}

	if [ ! -d media_build ] ; then
		git clone https://git.linuxtv.org/media_build.git
	fi

	if [ -f ${TOP_MDB_DIR}/board/${PACKAGE_NAME}/media_build/config-mycompat.h ] ; then
		cp ${TOP_MDB_DIR}/board/${PACKAGE_NAME}/media_build/config-mycompat.h media_build/v4l
	fi

	cd media_build

	make release DIR=${TOP_MDB_DIR}/build/${PACKAGE_CODE}/${KERNEL_LOCATION/.txz/}
	make -C linux/ download
	make -C linux/ untar
}

function SYNOAPOLLOLAKE_MEDIA_BUILD {
	echo "custom media build func";

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	if [ ! -d "media_build" ] ; then
		SYNOAPOLLOLAKE_MEDIA_CONFIGURE
	fi

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}/media_build

	make -C v4l/
}

function SYNOAPOLLOLAKE_MEDIA_CLEAN {
	echo "custom media clean func";
}
